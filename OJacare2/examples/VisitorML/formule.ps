%!PS-Adobe-3.0
%%Title: formule.ml
%%For: Beatrice Carre
%%Creator: a2ps version 4.14
%%CreationDate: Wed Jun  4 13:13:16 2014
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 5
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(type) K
( top = java'lang'Object java_instance;;) p n
(exception) K
( Null_object ) p
(of) K
( ) p
(string) k
(;;) p n
(type) K
( _jni_jFormule = fr'upmc'infop6'mlo'Formule java_instance;;) p n
(type) K
( _jni_jConstante = fr'upmc'infop6'mlo'Constante java_instance;;) p n
(type) K
( _jni_jVar = fr'upmc'infop6'mlo'Var java_instance;;) p n
(type) K
( _jni_jNon = fr'upmc'infop6'mlo'Non java_instance;;) p n
(type) K
( _jni_jOpBin = fr'upmc'infop6'mlo'OpBin java_instance;;) p n
(type) K
( _jni_jEt = fr'upmc'infop6'mlo'Et java_instance;;) p n
(type) K
( _jni_jOu = fr'upmc'infop6'mlo'Ou java_instance;;) p n
(type) K
( _jni_jVisiteur = fr'upmc'infop6'mlo'Visiteur java_instance;;) p n
(type) K
( _jni_jVisiteurTS = fr'upmc'infop6'mlo'VisiteurTS java_instance;;) p n
(type) K
( _jni_jVisiteurML = fr'upmc'infop6'mlo'VisiteurML java_instance;;) p n
(type) K
( _jni_jMainML = fr'upmc'infop6'mlo'MainML java_instance;;) p n
(type) K
( _jni_jMainJava = fr'upmc'infop6'mlo'MainJava java_instance;;) p n
(class) K
( ) p
(type) K
( jFormule =) p n
(  ) S
(object) K n
(    ) p
(method) K
( _get_jni_jFormule : _jni_jFormule) p n
(    ) S
(method) K
( accepte : jVisiteur -> ) p
(unit) k n
(  ) p
(end) K n
(and) S
( jConstante =) p n
(  ) S
(object) K n
(    ) p
(inherit) K
( jFormule) p n
(    ) S
(method) K
( _get_jni_jConstante : _jni_jConstante) p n
(    ) S
(method) K
( valeur : ) p
(unit) k
( -> ) p
(bool) k n
(    ) p
(method) K
( accepte : jVisiteur -> ) p
(unit) k n
(  ) p
(end) K n
(and) S
( jVar =) p n
(  ) S
(object) K n
(    ) p
(inherit) K
( jFormule) p n
(    ) S
(method) K
( _get_jni_jVar : _jni_jVar) p n
(    ) S
(method) K
( ident : ) p
(unit) k
( -> ) p
(string) k n
(    ) p
(method) K
( accepte : jVisiteur -> ) p
(unit) k n
(  ) p
(end) K n
(and) S
( jNon =) p n
(  ) S
(object) K n
(    ) p
(inherit) K
( jFormule) p n
(    ) S
(method) K
( _get_jni_jNon : _jni_jNon) p n
(    ) S
(method) K
( sous_formule : ) p
(unit) k
( -> jFormule) p n
(    ) S
(method) K
( accepte : jVisiteur -> ) p
(unit) k n
(  ) p
(end) K n
(and) S
( jOpBin =) p n
(  ) S
(object) K n
(    ) p
(inherit) K
( jFormule) p n
(    ) S
(method) K
( _get_jni_jOpBin : _jni_jOpBin) p n
(    ) S
(method) K
( sous_formule_g : ) p
(unit) k
( -> jFormule) p n
(    ) S
(method) K
( sous_formule_d : ) p
(unit) k
( -> jFormule) p n
(  ) S
(end) K n
(and) S
( jEt =) p n
(  ) S
(object) K n
(    ) p
(inherit) K
( jOpBin) p n
(    ) S
(method) K
( _get_jni_jEt : _jni_jEt) p n
(    ) S
(method) K
( accepte : jVisiteur -> ) p
(unit) k n
(  ) p
(end) K n
(and) S
( jOu =) p n
(  ) S
(object) K n
(    ) p
(inherit) K
( jOpBin) p n
(    ) S
(method) K
( _get_jni_jOu : _jni_jOu) p n
(    ) S
(method) K
( accepte : jVisiteur -> ) p
(unit) k n
(  ) p
(end) K n
(and) S
( jVisiteur =) p n
(  ) S
(object) K n
(    ) p
(method) K
( _get_jni_jVisiteur : _jni_jVisiteur) p n
(    ) S
(method) K
( visite_cst : jConstante -> ) p
(unit) k n
(    ) p
(method) K
( visite_non : jNon -> ) p
(unit) k n
(    ) p
(method) K
( visite_et : jEt -> ) p
(unit) k n
(    ) p
(method) K
( visite_ou : jOu -> ) p
(unit) k n
(    ) p
(method) K
( visite_var : jVar -> ) p
(unit) k n
(  ) p
(end) K n
(and) S
( jVisiteurTS =) p n
(formule.ml) (Page 1/9) (Jun 04, 14 11:48) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(object) K n
(    ) p
(inherit) K
( jVisiteur) p n
(    ) S
(method) K
( _get_jni_jVisiteurTS : _jni_jVisiteurTS) p n
(    ) S
(method) K
( get_res : ) p
(unit) k
( -> ) p
(string) k n
(    ) p
(method) K
( visite_cst : jConstante -> ) p
(unit) k n
(    ) p
(method) K
( visite_non : jNon -> ) p
(unit) k n
(    ) p
(method) K
( visite_et : jEt -> ) p
(unit) k n
(    ) p
(method) K
( visite_ou : jOu -> ) p
(unit) k n
(    ) p
(method) K
( visite_var : jVar -> ) p
(unit) k n
(  ) p
(end) K n
(and) S
( jVisiteurML =) p n
(  ) S
(object) K n
(    ) p
(inherit) K
( jVisiteur) p n
(    ) S
(method) K
( _get_jni_jVisiteurML : _jni_jVisiteurML) p n
(    ) S
(method) K
( get_res : ) p
(unit) k
( -> ) p
(string) k n
(  ) p
(end) K n
(and) S
( jMainML =) p n
(  ) S
(object) K n
(    ) p
(method) K
( _get_jni_jMainML : _jni_jMainML) p n
(    ) S
(method) K
( cree_visiteur : ) p
(unit) k
( -> jVisiteurML) p n
(  ) S
(end) K n
(and) S
( jMainJava = ) p
(object) K
( ) p
(method) K
( _get_jni_jMainJava : _jni_jMainJava ) p
(end) K
(;;) p n
(class) K
( _capsule_jFormule \(jni_ref : _jni_jFormule\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/Formule) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( accepte =) p n
(        ) S
(fun) K
( \(_p0 : jVisiteur\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVisiteur) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Formule.accepte\(fr.upmc.infop6.mlo.Visiteur\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jFormule = jni_ref) p n
(    ) S
(end) K n
(and) S
( _capsule_jConstante \(jni_ref : _jni_jConstante\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/Constante) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( valeur =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          Java.call ") S
(fr.upmc.infop6.mlo.Constante.valeur\(\):boolean) str
(" jni_ref) p n
(      ) S
(method) K
( accepte =) p n
(        ) S
(fun) K
( \(_p0 : jVisiteur\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVisiteur) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Constante.accepte\(fr.upmc.infop6.mlo.Visiteur\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jConstante = jni_ref) p n
(      ) S
(method) K
( _get_jni_jFormule = \(jni_ref :> _jni_jFormule\)) p n
(    ) S
(end) K n
(and) S
( _capsule_jVar \(jni_ref : _jni_jVar\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/Var) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( ident =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          JavaString.to_string) N
(            \(Java.call ") S
(fr.upmc.infop6.mlo.Var.ident\(\):java.lang.String) str
(") p n
(formule.ml) (Page 2/9) (Jun 04, 14 11:48) title
border
grestore
(Printed by Beatrice Carre) rhead
(formule.ml) (1/5) (Wednesday June 04, 2014) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(               jni_ref\)) p n
(      ) S
(method) K
( accepte =) p n
(        ) S
(fun) K
( \(_p0 : jVisiteur\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVisiteur) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Var.accepte\(fr.upmc.infop6.mlo.Visiteur\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jVar = jni_ref) p n
(      ) S
(method) K
( _get_jni_jFormule = \(jni_ref :> _jni_jFormule\)) p n
(    ) S
(end) K n
(and) S
( _capsule_jNon \(jni_ref : _jni_jNon\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/Non) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( sous_formule =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          \() S
(new) K
( _capsule_jFormule) p n
(             \(Java.call) N
(                ") S
(fr.upmc.infop6.mlo.Non.sous_formule\(\):fr.upmc.infop6.mlo.Formule) str
(") p n
(                jni_ref\) :) N
(            jFormule\)) N
(      ) S
(method) K
( accepte =) p n
(        ) S
(fun) K
( \(_p0 : jVisiteur\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVisiteur) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Non.accepte\(fr.upmc.infop6.mlo.Visiteur\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jNon = jni_ref) p n
(      ) S
(method) K
( _get_jni_jFormule = \(jni_ref :> _jni_jFormule\)) p n
(    ) S
(end) K n
(and) S
( _capsule_jOpBin \(jni_ref : _jni_jOpBin\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/OpBin) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( sous_formule_d =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          \() S
(new) K
( _capsule_jFormule) p n
(             \(Java.call) N
(                ") S
(fr.upmc.infop6.mlo.OpBin.sous_formule_d\(\):fr.upmc.infop6.mlo.Formule) str
(") p n
(                jni_ref\) :) N
(            jFormule\)) N
(      ) S
(method) K
( sous_formule_g =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          \() S
(new) K
( _capsule_jFormule) p n
(             \(Java.call) N
(                ") S
(fr.upmc.infop6.mlo.OpBin.sous_formule_g\(\):fr.upmc.infop6.mlo.Formule) str
(") p n
(                jni_ref\) :) N
(            jFormule\)) N
(      ) S
(method) K
( accepte =) p n
(        ) S
(fun) K
( \(_p0 : jVisiteur\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVisiteur) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Formule.accepte\(fr.upmc.infop6.mlo.Visiteur\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jOpBin = jni_ref) p n
(      ) S
(method) K
( _get_jni_jFormule = \(jni_ref :> _jni_jFormule\)) p n
(    ) S
(end) K n
(and) S
( _capsule_jEt \(jni_ref : _jni_jEt\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(formule.ml) (Page 3/9) (Jun 04, 14 11:48) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/Et) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( sous_formule_d =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          \() S
(new) K
( _capsule_jFormule) p n
(             \(Java.call) N
(                ") S
(fr.upmc.infop6.mlo.OpBin.sous_formule_d\(\):fr.upmc.infop6.mlo.Formule) str
(") p n
(                jni_ref\) :) N
(            jFormule\)) N
(      ) S
(method) K
( sous_formule_g =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          \() S
(new) K
( _capsule_jFormule) p n
(             \(Java.call) N
(                ") S
(fr.upmc.infop6.mlo.OpBin.sous_formule_g\(\):fr.upmc.infop6.mlo.Formule) str
(") p n
(                jni_ref\) :) N
(            jFormule\)) N
(      ) S
(method) K
( accepte =) p n
(        ) S
(fun) K
( \(_p0 : jVisiteur\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVisiteur) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Et.accepte\(fr.upmc.infop6.mlo.Visiteur\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jEt = jni_ref) p n
(      ) S
(method) K
( _get_jni_jFormule = \(jni_ref :> _jni_jFormule\)) p n
(      ) S
(method) K
( _get_jni_jOpBin = \(jni_ref :> _jni_jOpBin\)) p n
(    ) S
(end) K n
(and) S
( _capsule_jOu \(jni_ref : _jni_jOu\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/Ou) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( sous_formule_d =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          \() S
(new) K
( _capsule_jFormule) p n
(             \(Java.call) N
(                ") S
(fr.upmc.infop6.mlo.OpBin.sous_formule_d\(\):fr.upmc.infop6.mlo.Formule) str
(") p n
(                jni_ref\) :) N
(            jFormule\)) N
(      ) S
(method) K
( sous_formule_g =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          \() S
(new) K
( _capsule_jFormule) p n
(             \(Java.call) N
(                ") S
(fr.upmc.infop6.mlo.OpBin.sous_formule_g\(\):fr.upmc.infop6.mlo.Formule) str
(") p n
(                jni_ref\) :) N
(            jFormule\)) N
(      ) S
(method) K
( accepte =) p n
(        ) S
(fun) K
( \(_p0 : jVisiteur\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVisiteur) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Ou.accepte\(fr.upmc.infop6.mlo.Visiteur\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jOu = jni_ref) p n
(      ) S
(method) K
( _get_jni_jFormule = \(jni_ref :> _jni_jFormule\)) p n
(      ) S
(method) K
( _get_jni_jOpBin = \(jni_ref :> _jni_jOpBin\)) p n
(    ) S
(end) K n
(and) S
( _capsule_jVisiteur \(jni_ref : _jni_jVisiteur\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/Visiteur) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( visite_var =) p n
(formule.ml) (Page 4/9) (Jun 04, 14 11:48) title
border
grestore
(Printed by Beatrice Carre) rhead
(formule.ml) (2/5) (Wednesday June 04, 2014) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        ) p
(fun) K
( \(_p0 : jVar\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVar) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Var\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_ou =) p n
(        ) S
(fun) K
( \(_p0 : jOu\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jOu) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Ou\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_et =) p n
(        ) S
(fun) K
( \(_p0 : jEt\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jEt) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Et\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_non =) p n
(        ) S
(fun) K
( \(_p0 : jNon\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jNon) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Non\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_cst =) p n
(        ) S
(fun) K
( \(_p0 : jConstante\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jConstante) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Constante\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jVisiteur = jni_ref) p n
(    ) S
(end) K n
(and) S
( _capsule_jVisiteurTS \(jni_ref : _jni_jVisiteurTS\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/VisiteurTS) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( get_res =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          JavaString.to_string) N
(            \(Java.call) N
(               ") S
(fr.upmc.infop6.mlo.VisiteurTS.get_res\(\):java.lang.String) str
(") p n
(               jni_ref\)) N
(      ) S
(method) K
( visite_var =) p n
(        ) S
(fun) K
( \(_p0 : jVar\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVar) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.VisiteurTS.visite\(fr.upmc.infop6.mlo.Var\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_ou =) p n
(        ) S
(fun) K
( \(_p0 : jOu\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jOu) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.VisiteurTS.visite\(fr.upmc.infop6.mlo.Ou\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_et =) p n
(        ) S
(fun) K
( \(_p0 : jEt\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jEt) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.VisiteurTS.visite\(fr.upmc.infop6.mlo.Et\):void) str
(") p n
(formule.ml) (Page 5/9) (Jun 04, 14 11:48) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(              jni_ref _p0) p n
(      ) S
(method) K
( visite_non =) p n
(        ) S
(fun) K
( \(_p0 : jNon\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jNon) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.VisiteurTS.visite\(fr.upmc.infop6.mlo.Non\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_cst =) p n
(        ) S
(fun) K
( \(_p0 : jConstante\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jConstante) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.VisiteurTS.visite\(fr.upmc.infop6.mlo.Constante\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jVisiteurTS = jni_ref) p n
(      ) S
(method) K
( _get_jni_jVisiteur = \(jni_ref :> _jni_jVisiteur\)) p n
(    ) S
(end) K n
(and) S
( _capsule_jVisiteurML \(jni_ref : _jni_jVisiteurML\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/VisiteurML) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( get_res =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          JavaString.to_string) N
(            \(Java.call) N
(               ") S
(fr.upmc.infop6.mlo.VisiteurML.get_res\(\):java.lang.String) str
(") p n
(               jni_ref\)) N
(      ) S
(method) K
( visite_var =) p n
(        ) S
(fun) K
( \(_p0 : jVar\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jVar) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Var\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_ou =) p n
(        ) S
(fun) K
( \(_p0 : jOu\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jOu) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Ou\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_et =) p n
(        ) S
(fun) K
( \(_p0 : jEt\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jEt) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Et\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_non =) p n
(        ) S
(fun) K
( \(_p0 : jNon\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jNon) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Non\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( visite_cst =) p n
(        ) S
(fun) K
( \(_p0 : jConstante\) ->) p n
(          ) S
(let) K
( _p0 = _p0#_get_jni_jConstante) p n
(          ) S
(in) K n
(            Java.call) p n
(              ") S
(fr.upmc.infop6.mlo.Visiteur.visite\(fr.upmc.infop6.mlo.Constante\):void) str
(") p n
(              jni_ref _p0) N
(      ) S
(method) K
( _get_jni_jVisiteurML = jni_ref) p n
(      ) S
(method) K
( _get_jni_jVisiteur = \(jni_ref :> _jni_jVisiteur\)) p n
(    ) S
(end) K n
(formule.ml) (Page 6/9) (Jun 04, 14 11:48) title
border
grestore
(Printed by Beatrice Carre) rhead
(formule.ml) (3/5) (Wednesday June 04, 2014) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(and) K
( _capsule_jMainML \(jni_ref : _jni_jMainML\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/MainML) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(method) K
( cree_visiteur =) p n
(        ) S
(fun) K
( \(\) ->) p n
(          \() S
(new) K
( _capsule_jVisiteurML) p n
(             \(Java.call) N
(                ") S
(fr.upmc.infop6.mlo.MainML.cree_visiteur\(\):fr.upmc.infop6.mlo.VisiteurML) str
(") p n
(                jni_ref\) :) N
(            jVisiteurML\)) N
(      ) S
(method) K
( _get_jni_jMainML = jni_ref) p n
(    ) S
(end) K n
(and) S
( _capsule_jMainJava \(jni_ref : _jni_jMainJava\) =) p n
(  ) S
(let) K
( _ =) p n
(    ) S
(if) K
( Java.is_null jni_ref) p n
(    ) S
(then) K
( ) p
(raise) K
( \(Null_object ") p
(fr/upmc/infop6/mlo/MainJava) str
("\)) p n
(    ) S
(else) K
( \(\)) p n
(  ) S
(in) K
( ) p
(object) K
( \(self\) ) p
(method) K
( _get_jni_jMainJava = jni_ref ) p
(end) K n
() p n
() N
(and) K
( ) p
(virtual) K
( _souche_jVisiteurML = ) p n
(  ) S
(let) K
( jni_ref = ref Java.null) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(initializer) K n
() p 8 T (jni_ref := ) N
() S 8 T (  Java.proxy ") S
(fr.upmc.infop6.mlo.VisiteurML) str
(") p n
() S 8 T (  \() N
() S 8 T (  ) S
(object) K n
() p 8 T (    ) S
(method) K
( get_res = JavaString.of_string \(self#get_res \(\)\)) p n
() S 8 T (    ) S
(method) K
( visite_5 =) p n
(              ) S
(fun) K
( \(_p0 : _jni_jVar\) ->) p n
() S 8 T () S 16 T () S
(let) K
( _p0 : jVar = ) p
(new) K
( _capsule_jVar _p0 ) p
(in) K
( self#visite_var _p0) p n
() S 8 T (    ) S
(method) K
( visite_4 =) p n
(              ) S
(fun) K
( \(_p0 : _jni_jOu\) ->) p n
() S 8 T () S 16 T () S
(let) K
( _p0 : jOu = ) p
(new) K
( _capsule_jOu _p0 ) p
(in) K
( self#visite_ou _p0) p n
() S 8 T (    ) S
(method) K
( visite_2 =) p n
(              ) S
(fun) K
( \(_p0 : _jni_jEt\) ->) p n
() S 8 T () S 16 T () S
(let) K
( _p0 : jEt = ) p
(new) K
( _capsule_jEt _p0 ) p
(in) K
( self#visite_et _p0) p n
() S 8 T (    ) S
(method) K
( visite_3 =) p n
(              ) S
(fun) K
( \(_p0 : _jni_jNon\) ->) p n
() S 8 T () S 16 T () S
(let) K
( _p0 : jNon = ) p
(new) K
( _capsule_jNon _p0 ) p
(in) K
( self#visite_non _p0) p n
() S 8 T (    ) S
(method) K
( visite =) p n
(              ) S
(fun) K
( \(_p0 : _jni_jConstante\) ->) p n
() S 8 T () S 16 T () S
(let) K
( _p0 : jConstante = ) p
(new) K
( _capsule_jConstante _p0) p n
() S 8 T () S 16 T () S
(in) K
( self#visite_cst _p0) p n
() S 8 T (  ) S
(end) K
(\)) p n
(      ) S
(method) K
( ) p
(virtual) K
( get_res : ) p
(unit) k
( -> ) p
(string) k n
(      ) p
(method) K
( ) p
(virtual) K
( visite_var : jVar -> ) p
(unit) k n
(      ) p
(method) K
( ) p
(virtual) K
( visite_ou : jOu -> ) p
(unit) k n
(      ) p
(method) K
( ) p
(virtual) K
( visite_et : jEt -> ) p
(unit) k n
(      ) p
(method) K
( ) p
(virtual) K
( visite_non : jNon -> ) p
(unit) k n
(      ) p
(method) K
( ) p
(virtual) K
( visite_cst : jConstante -> ) p
(unit) k n
(      ) p
(method) K
( _get_jni_jVisiteurML = \(!jni_ref : _jni_jVisiteurML\)) p n
(      ) S
(method) K
( _get_jni_jVisiteur = \(!jni_ref :> _jni_jVisiteur\)) p n
(    ) S
(end) K n
(and) S
( ) p
(virtual) K
( _souche_jMainML  =) p n
(  ) S
(let) K
( jni_ref = ref Java.null ) p n
(  ) S
(in) K n
(    ) p
(object) K
( \(self\)) p n
(      ) S
(initializer) K n
() p 8 T (  jni_ref := ) N
() S 8 T (    Java.proxy ") S
(fr.upmc.infop6.mlo.MainML) str
(") p n
() S 8 T (    \() N
() S 8 T (    ) S
(object) K n
(formule.ml) (Page 7/9) (Jun 04, 14 11:48) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (      ) S
(method) K
( cree_visiteur =) p n
() S 8 T () S 16 T (\(self#cree_visiteur \(\)\)#_get_jni_jVisiteurML) N
() S 8 T (    ) S
(end) K
(\)) p n
(      ) S
(method) K
( ) p
(virtual) K
( cree_visiteur : ) p
(unit) k
( -> jVisiteurML) p n
(      ) S
(method) K
( _get_jni_jMainML = \(!jni_ref : _jni_jMainML\)) p n
(    ) S
(end) K
(;;) p n
(let) K
( jFormule_of_top \(o : top\) : jFormule =) p n
(  ) S
(new) K
( _capsule_jFormule \(Java.cast ") p
(fr.upmc.infop6.mlo.Formule) str
(" o\);;) p n
(let) K
( jConstante_of_top \(o : top\) : jConstante =) p n
(  ) S
(new) K
( _capsule_jConstante \(Java.cast ") p
(fr.upmc.infop6.mlo.Constante) str
(" o\);;) p n
(let) K
( jVar_of_top \(o : top\) : jVar =) p n
(  ) S
(new) K
( _capsule_jVar \(Java.cast ") p
(fr.upmc.infop6.mlo.Var) str
(" o\);;) p n
(let) K
( jNon_of_top \(o : top\) : jNon =) p n
(  ) S
(new) K
( _capsule_jNon \(Java.cast ") p
(fr.upmc.infop6.mlo.Non) str
(" o\);;) p n
(let) K
( jOpBin_of_top \(o : top\) : jOpBin =) p n
(  ) S
(new) K
( _capsule_jOpBin \(Java.cast ") p
(fr.upmc.infop6.mlo.OpBin) str
(" o\);;) p n
(let) K
( jEt_of_top \(o : top\) : jEt =) p n
(  ) S
(new) K
( _capsule_jEt \(Java.cast ") p
(fr.upmc.infop6.mlo.Et) str
(" o\);;) p n
(let) K
( jOu_of_top \(o : top\) : jOu =) p n
(  ) S
(new) K
( _capsule_jOu \(Java.cast ") p
(fr.upmc.infop6.mlo.Ou) str
(" o\);;) p n
(let) K
( jVisiteur_of_top \(o : top\) : jVisiteur =) p n
(  ) S
(new) K
( _capsule_jVisiteur \(Java.cast ") p
(fr.upmc.infop6.mlo.Visiteur) str
(" o\);;) p n
(let) K
( jVisiteurTS_of_top \(o : top\) : jVisiteurTS =) p n
(  ) S
(new) K
( _capsule_jVisiteurTS \(Java.cast ") p
(fr.upmc.infop6.mlo.VisiteurTS) str
(" o\);;) p n
(let) K
( jVisiteurML_of_top \(o : top\) : jVisiteurML =) p n
(  ) S
(new) K
( _capsule_jVisiteurML \(Java.cast ") p
(fr.upmc.infop6.mlo.VisiteurML) str
(" o\);;) p n
(let) K
( jMainML_of_top \(o : top\) : jMainML =) p n
(  ) S
(new) K
( _capsule_jMainML \(Java.cast ") p
(fr.upmc.infop6.mlo.MainML) str
(" o\);;) p n
(let) K
( jMainJava_of_top \(o : top\) : jMainJava =) p n
(  ) S
(new) K
( _capsule_jMainJava \(Java.cast ") p
(fr.upmc.infop6.mlo.MainJava) str
(" o\);;) p n
(let) K
( _instance_of_jFormule \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.Formule) str
(" o;;) p n
(let) K
( _instance_of_jConstante \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.Constante) str
(" o;;) p n
(let) K
( _instance_of_jVar \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.Var) str
(" o;;) p n
(let) K
( _instance_of_jNon \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.Non) str
(" o;;) p n
(let) K
( _instance_of_jOpBin \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.OpBin) str
(" o;;) p n
(let) K
( _instance_of_jEt \(o : top\) = Java.instanceof ") p
(fr.upmc.infop6.mlo.Et) str
(" o;;) p n
(let) K
( _instance_of_jOu \(o : top\) = Java.instanceof ") p
(fr.upmc.infop6.mlo.Ou) str
(" o;;) p n
(let) K
( _instance_of_jVisiteur \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.Visiteur) str
(" o;;) p n
(let) K
( _instance_of_jVisiteurTS \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.VisiteurTS) str
(" o;;) p n
(let) K
( _instance_of_jVisiteurML \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.VisiteurML) str
(" o;;) p n
(let) K
( _instance_of_jMainML \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.MainML) str
(" o;;) p n
(let) K
( _instance_of_jMainJava \(o : top\) =) p n
(  Java.instanceof ") S
(fr.upmc.infop6.mlo.MainJava) str
(" o;;) p n
(class) K
( constante _p0 =) p n
(  ) S
(let) K
( _p0 = _p0) p n
(  ) S
(in) K
( ) p
(let) K
( java_obj = Java.make ") p
(fr.upmc.infop6.mlo.Constante\(boolean\)) str
(" _p0) p n
(    ) S
(in) K
( ) p
(object) K
( \(self\) ) p
(inherit) K
( _capsule_jConstante java_obj ) p
(end) K
(;;) p n
(class) K
( var _p0 =) p n
(  ) S
(let) K
( _p0 = JavaString.of_string _p0) p n
(  ) S
(in) K
( ) p
(let) K
( java_obj = Java.make ") p
(fr.upmc.infop6.mlo.Var\(java.lang.String\)) str
(" _p0) p n
(    ) S
(in) K
( ) p
(object) K
( \(self\) ) p
(inherit) K
( _capsule_jVar java_obj ) p
(end) K
(;;) p n
(class) K
( non _p0 =) p n
(  ) S
(let) K
( _p0 = _p0#_get_jni_jFormule) p n
(  ) S
(in) K n
(    ) p
(let) K
( java_obj =) p n
(      Java.make ") S
(fr.upmc.infop6.mlo.Non\(fr.upmc.infop6.mlo.Formule\)) str
(" _p0) p n
(    ) S
(in) K
( ) p
(object) K
( \(self\) ) p
(inherit) K
( _capsule_jNon java_obj ) p
(end) K
(;;) p n
(class) K
( et _p0 _p1 =) p n
(  ) S
(let) K
( _p1 = _p1#_get_jni_jFormule) p n
(  ) S
(in) K
( ) p
(let) K
( _p0 = _p0#_get_jni_jFormule) p n
(formule.ml) (Page 8/9) (Jun 04, 14 11:48) title
border
grestore
(Printed by Beatrice Carre) rhead
(formule.ml) (4/5) (Wednesday June 04, 2014) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(in) K n
(      ) p
(let) K
( java_obj =) p n
(        Java.make) N
(          ") S
(fr.upmc.infop6.mlo.Et\(fr.upmc.infop6.mlo.Formule,fr.upmc.infop6.mlo.Formule\)) str
(") p n
(          _p0 _p1) N
(      ) S
(in) K
( ) p
(object) K
( \(self\) ) p
(inherit) K
( _capsule_jEt java_obj ) p
(end) K
(;;) p n
(class) K
( ou _p0 _p1 =) p n
(  ) S
(let) K
( _p1 = _p1#_get_jni_jFormule) p n
(  ) S
(in) K
( ) p
(let) K
( _p0 = _p0#_get_jni_jFormule) p n
(    ) S
(in) K n
(      ) p
(let) K
( java_obj =) p n
(        Java.make) N
(          ") S
(fr.upmc.infop6.mlo.Ou\(fr.upmc.infop6.mlo.Formule,fr.upmc.infop6.mlo.Formule\)) str
(") p n
(          _p0 _p1) N
(      ) S
(in) K
( ) p
(object) K
( \(self\) ) p
(inherit) K
( _capsule_jOu java_obj ) p
(end) K
(;;) p n
(class) K
( visiteurTS \(\) =) p n
(  ) S
(let) K
( java_obj = Java.make ") p
(fr.upmc.infop6.mlo.VisiteurTS\(\)) str
(" \(\)) p n
(  ) S
(in) K
( ) p
(object) K
( \(self\) ) p
(inherit) K
( _capsule_jVisiteurTS java_obj ) p
(end) K
(;;) p n
() N
(class) K
( ) p
(virtual) K
( _stub_jVisiteurML =) p n
(    ) S
(object) K
( \(self\)) p n
(      ) S
(inherit) K
( _souche_jVisiteurML ) p n
(    ) S
(end) K
(;;) p n
() N
(class) K
( ) p
(virtual) K
( _stub_jMainML =) p n
(    ) S
(object) K
( \(self\)) p n
(      ) S
(inherit) K
( _souche_jMainML ) p n
(    ) S
(end) K
(;;) p n
() N
(let) K
( fr_upmc_infop6_mlo_jMainJava__main =) p n
(    ) S
(fun) K
( \(_p0 : jMainML\) ->) p n
(      ) S
(let) K
( _p0 = _p0#_get_jni_jMainML) p n
(      ) S
(in) K
( Java.call ") p
(fr.upmc.infop6.mlo.MainJava.main\(fr.upmc.infop6.mlo.MainML\)) str
(" _p0) p n
(formule.ml) (Page 9/9) (Jun 04, 14 11:48) title
border
grestore
(Printed by Beatrice Carre) rhead
(formule.ml) (5/5) (Wednesday June 04, 2014) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
